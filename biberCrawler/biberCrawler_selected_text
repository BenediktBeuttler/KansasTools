from bs4 import BeautifulSoup
import requests
import codecs
import re

basePath = "biberCrawler"
metaFileName = basePath + "/bibermeta.csv"
logs = basePath + "/logs.txt"
# Variables which have the same value for all articles
biberLizenz = 'unknown'
encoding = "utf-8"
author = 'dasBiber'
org = 'dasBiber'# 
orgLink = 'https://www.dasbiber.at/'
#logs = 'logs.txt'  # Define logs file path

r = requests.get("https://www.dasbiber.at/content/optimal-vorbereitet-auf-die-karriere-der-gesundheits-und-krankenpflege")
data = r.text
soup = BeautifulSoup(data, features="html.parser")

# Method to append meta data to bibermeta.csv
def addToMetaFile(fileName, url, title, author, org, orgLink):
    with codecs.open(metaFileName, 'a', encoding) as f:
        f.write(f'{fileName}\t{title}\t{url}\t\t{biberLizenz}\t{author}\t\t{org}\t{orgLink}\n')
        f.close()

    logIt(str("added to Meta - " + title))

# Function to log URLs
def logIt(text):
    with codecs.open(logs, 'a', encoding) as f:
        f.write(text+ "\n")
        f.close()
    #print(text)

# Crawling method
def crawl_page_metaData(url_link):
     r = requests.get(url_link)
     data = r.text
     soup = BeautifulSoup(data, features="html.parser")
     
     meta_title = soup.title
     meta_title = meta_title.string 
     meta_title = meta_title[:-11]
     print(meta_title)
     fileName = meta_title.replace(" ", "") + '.txt'
     print(fileName)
     
     
     # baseUrl = 'https://www.dasbiber.at/content/'
     url = (soup.find('link', rel=re.compile('canonical'))['href']) 
     
     logIt(url)
     addToMetaFile(fileName, url, meta_title, author, org, orgLink)


def crawl_page_text(url_link):
    text = ""
    parent = soup.find("div", {"class":"node-content"}) #find all tags, safe them in variable
    contentChildren = parent.findChildren()
    for child in contentChildren:
        
        if (child.name != "div" ): #habe diese Zeile aus flutercrawler (line 68) kopiert. Wieso funktioniert es bei mir nicht?
            txt = child.get_text().strip()
            if ((txt != "&nbsp") and (txt !="*BEZAHLTE ANZEIGE*")):
                text += txt
                print(text)
            else: 
                continue
            
    logIt(text)
    https://www.dasbiber.at/content/optimal-vorbereitet-auf-die-karriere-der-gesundheits-und-krankenpflege






# Calling the crawl_page function
#crawl_page()
crawlSelectedText(soup)


